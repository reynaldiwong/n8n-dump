{"createdAt":"2025-07-09T10:05:51.586Z","updatedAt":"2025-07-11T09:18:33.000Z","id":"KShvnmBU9OtyyiDz","name":"DONE - AI Scheduling","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"=Jam Operational:  {{ $json['Jam Operasional'] }}\nMinimal Staff per Shift: {{ $json['Minimal Staff per Shift'] }}\nNama Staff: {{ $json['Nama Staff'] }}","options":{"systemMessage":"=You are a scheduling assistant for a small business. Use the provided input to generate a fair and optimized weekly shift schedule.\n\n**Input Structure:**\n\n- List of 10 staff names (in a list or from Column A)\n- Operational hours in the format `08:00-22:00`\n- Minimum staff per shift (integer)\n\n**Instructions:**\n\n1. Use the staff name list.\n2. Read operational hours and divide the total range into **3 equal shifts**:\n    - Pagi (Morning)\n    - Siang (Afternoon)\n    - Malam (Evening)\n3. Ensure each shift has **at least** the specified minimum number of staff.\n4. Distribute shifts **evenly** and fairly across all 7 days.\n5. Avoid assigning staff to **back-to-back shifts** (e.g., night then morning).\n6. Rotate the schedule to keep workload distribution balanced.\n\n**Output Format: JSON**\n\nReturn the full weekly schedule in this JSON structure:\n\n[\n  {\n    \"day\": \"Senin\",\n    \"shift\": \"Pagi\",\n    \"time\": \"08:00-14:00\",\n    \"staff\": [\"Andi\", \"Budi\"]\n  },\n  {\n    \"day\": \"Senin\",\n    \"shift\": \"Siang\",\n    \"time\": \"14:00-18:00\",\n    \"staff\": [\"Citra\", \"Dewi\"]\n  },\n  {\n    \"day\": \"Senin\",\n    \"shift\": \"Malam\",\n    \"time\": \"18:00-22:00\",\n    \"staff\": [\"Eko\", \"Fani\"]\n  },\n  ...\n]\n\nMake sure:\n\n- All 7 days are covered (Use bahasa Indonesia)\n- Each day has 3 shifts\n- Each shift meets minimum staff requirement\n- No scheduling conflicts (e.g. double-booked staff)"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[1020,0],"id":"167841c4-3639-4616-afea-023178aa0d39","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{"responseFormat":"json_object"}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1040,160],"id":"148b5eae-15a0-4891-9c9b-d547cedf4e9a","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"lHwdfRlL2uaw5819","name":"OpenAi account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI","mode":"list","cachedResultName":"dummy schedule","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":259737153,"mode":"list","cachedResultName":"Details","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI/edit#gid=259737153"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[300,0],"id":"9108b588-647b-4a97-a675-d861435392f0","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"pBcUJsCuL1jf6ypz","name":"Google Sheets account 4"}}},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[600,0],"id":"6aed180d-92cb-4991-b22a-df05aea1794c","name":"Aggregate"},{"parameters":{"jsCode":"const raw = items[0].json.data;\n\nlet result = {\n  \"Jam Operasional\": null,\n  \"Minimal Staff per Shift\": null,\n  \"Nama Staff\": []\n};\n\nlet section = \"Jam Operasional\"; // Start with Jam Operasional\n\nfor (const row of raw) {\n  const name = row[\"Nama Staff\"];\n  const value = row[\"Jam Operasional\"];\n\n  // Check if this is the section switch\n  if (value === \"Minimal Staff per Shift\") {\n    section = \"Minimal Staff per Shift\";\n    continue; // Skip this header row\n  }\n\n  // Fill Jam Operasional (once)\n  if (section === \"Jam Operasional\" && result[\"Jam Operasional\"] === null) {\n    result[\"Jam Operasional\"] = value;\n  }\n\n  // Fill Minimal Staff per Shift (once)\n  else if (section === \"Minimal Staff per Shift\" && result[\"Minimal Staff per Shift\"] === null) {\n    result[\"Minimal Staff per Shift\"] = value.toString(); // ensure it's string\n  }\n\n  // Collect names under Minimal Staff section\n  if (section === \"Minimal Staff per Shift\") {\n    result[\"Nama Staff\"].push(name);\n  }\n}\n\nreturn [{ json: result }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[760,0],"id":"2e013b06-9e4c-4a33-94d9-032de7068db1","name":"Code"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,0],"id":"290ff31c-13ea-4585-bc1e-ab88b17d1d9f","name":"When clicking ‘Test workflow’"},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI","mode":"list","cachedResultName":"dummy schedule","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1956242479,"mode":"list","cachedResultName":"Schedule","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1IIu4aY1FhIKEgEWuIo-YPyXOIS0bOHtBMBdEU4fcUtI/edit#gid=1956242479"},"columns":{"mappingMode":"defineBelow","value":{"Day":"={{ $json.day }}","Shift":"={{ $json.shift }}","Time":"={{ $json.time }}","Assigned Staff":"={{ $json.staff }}"},"matchingColumns":[],"schema":[{"id":"Day","displayName":"Day","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Shift","displayName":"Shift","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Time","displayName":"Time","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Assigned Staff","displayName":"Assigned Staff","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1760,0],"id":"ea309df9-2112-4dcc-a2a1-92783ca461d2","name":"Google Sheets1","credentials":{"googleSheetsOAuth2Api":{"id":"pBcUJsCuL1jf6ypz","name":"Google Sheets account 4"}}},{"parameters":{"jsCode":"const rawString = $input.first().json.output;\n\nlet parsed;\n\ntry {\n  const cleaned = rawString\n    .replace(/^```json/, '')  // remove starting markdown if present\n    .replace(/```$/, '')      // remove ending markdown if present\n    .trim();\n\n  // Parse the outer object: { \"schedule\": [ ... ] }\n  parsed = JSON.parse(cleaned);\n} catch (err) {\n  throw new Error('Failed to parse JSON: ' + err.message);\n}\n\n// Extract the array under \"schedule\"\nconst schedule = parsed.schedule;\n\nif (!Array.isArray(schedule)) {\n  throw new Error(\"Expected 'schedule' to be an array.\");\n}\n\n// Map: format each staff array into comma-separated strings\nreturn schedule.map(entry => ({\n  json: {\n    ...entry,\n    staff: Array.isArray(entry.staff) ? entry.staff.join(', ') : entry.staff\n  }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1460,0],"id":"304ab45a-d7e8-40f4-b37e-4cd03a804398","name":"Code1"},{"parameters":{"content":"## Schedule Generation Request\nManual trigger untuk initiate automated weekly staff scheduling process dengan input dari business configuration spreadsheet untuk generate optimized shift assignments.","height":540,"width":300,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-140,-200],"typeVersion":1,"id":"06cff206-17cd-4ed7-8520-91b33c5eb292","name":"Sticky Note"},{"parameters":{"content":"## Business Configuration Input\nGoogle Sheets integration untuk fetch business details dari Details sheet termasuk operational hours, minimal staff requirements per shift, dan complete staff name list untuk scheduling calculations.","height":540,"width":300,"color":5},"type":"n8n-nodes-base.stickyNote","position":[200,-200],"typeVersion":1,"id":"2951ddd5-eb5b-46d4-a3a1-267bcbf50716","name":"Sticky Note1"},{"parameters":{"content":"## Configuration Processing\nAggregate business data dan process dengan Code node untuk extract structured configuration termasuk jam operasional, minimal staff per shift, dan nama staff list dalam format yang ready untuk AI analysis.","height":540,"width":380,"color":5},"type":"n8n-nodes-base.stickyNote","position":[540,-200],"typeVersion":1,"id":"d6280d5c-8b6c-4afd-8e34-beb1c8df8bdc","name":"Sticky Note2"},{"parameters":{"content":"## AI Schedule Optimization\nAI Agent dengan sophisticated scheduling algorithm untuk generate fair weekly shift distribution dengan 3-shift system (Pagi, Siang, Malam), avoid back-to-back assignments, ensure minimum staff coverage, dan optimize workload balance.","height":540,"width":380,"color":6},"type":"n8n-nodes-base.stickyNote","position":[960,-200],"typeVersion":1,"id":"2fb18f25-fc94-4132-b4eb-1f325b08e101","name":"Sticky Note3"},{"parameters":{"content":"## Schedule Formatting\nCode node untuk parse AI-generated JSON schedule output, format staff arrays ke comma-separated strings, validate schedule structure, dan prepare data untuk spreadsheet integration.","height":540,"width":260,"color":5},"type":"n8n-nodes-base.stickyNote","position":[1380,-200],"typeVersion":1,"id":"e2224f4f-5f12-4e71-b27e-980cb5233620","name":"Sticky Note4"},{"parameters":{"content":"## Weekly Schedule Output\nExport final weekly schedule ke Google Sheets dengan structured format termasuk Day, Shift, Time, dan Assigned Staff columns untuk easy management dan team visibility.","height":540,"width":260,"color":4},"type":"n8n-nodes-base.stickyNote","position":[1680,-200],"typeVersion":1,"id":"8e705dd3-af1d-4525-ae3f-0b462adfe707","name":"Sticky Note5"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Google Sheets":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Code1","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Google Sheets","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Google Sheets1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"20bfb947-95b5-46d5-b8cd-a06a4cd6d2f4","triggerCount":0,"tags":[]}
